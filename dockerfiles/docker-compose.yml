services:
  sender_api:
    image: erlang:25
    command: bash
    stdin_open: true
    hostname: sender_api
    container_name: sender_api
    working_dir: /app
    networks:
      - sender_api
    ports:
      - '8080:8080'
    volumes:
      - ../sender/rebar.config:/app/rebar.config
      - ../sender/rebar.lock:/app/rebar.lock
      - ../sender/apps:/app/apps
      - ../sender/config:/app/config
      - ../sender/test:/app/test
      - ../migrations:/app/priv/migrations
    depends_on:
      db:
        condition: service_healthy

  consumer_api:
    image: erlang:25
    command: bash
    stdin_open: true
    hostname: consumer_api
    container_name: consumer_api
    working_dir: /app
    networks:
      - consumer_api
    ports:
      - '8081:8080'
    volumes:
      - ../consumer/rebar.config:/app/rebar.config
      - ../consumer/rebar.lock:/app/rebar.lock
      - ../consumer/apps:/app/apps
      - ../consumer/config:/app/config
    depends_on:
      db:
        condition: service_healthy

  db:
    hostname: db
    container_name: db
    image: postgres:14.5-alpine
    restart: always
    networks:
      - sender_api
      - consumer_api
    ports:
      - 5432:5432
    environment:
      - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes: 
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

volumes:
  db:
    driver: local

networks:
  sender_api:
    driver: bridge
  consumer_api:
    driver: bridge

